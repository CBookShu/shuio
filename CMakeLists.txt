# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(example LANGUAGES CXX)

# target
add_executable(example "")
set_target_properties(example PROPERTIES OUTPUT_NAME "example")
set_target_properties(example PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_dependencies(example shuio)
target_include_directories(example PRIVATE
    .
)
target_compile_options(example PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(example PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(example PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(example PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(example PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(example PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET example PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(example PRIVATE
    shuio
)
target_link_directories(example PRIVATE
    build/windows/x64/release
)
target_sources(example PRIVATE
    example/sio.cpp
)

# target
add_executable(pingpong_client "")
set_target_properties(pingpong_client PROPERTIES OUTPUT_NAME "pingpong_client")
set_target_properties(pingpong_client PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_dependencies(pingpong_client shuio)
target_include_directories(pingpong_client PRIVATE
    .
)
target_compile_options(pingpong_client PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(pingpong_client PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(pingpong_client PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(pingpong_client PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(pingpong_client PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(pingpong_client PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET pingpong_client PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(pingpong_client PRIVATE
    shuio
)
target_link_directories(pingpong_client PRIVATE
    build/windows/x64/release
)
target_sources(pingpong_client PRIVATE
    example/pingpong/client.cpp
)

# target
add_executable(pingpong_server "")
set_target_properties(pingpong_server PROPERTIES OUTPUT_NAME "pingpong_server")
set_target_properties(pingpong_server PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
add_dependencies(pingpong_server shuio)
target_include_directories(pingpong_server PRIVATE
    .
)
target_compile_options(pingpong_server PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(pingpong_server PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(pingpong_server PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(pingpong_server PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(pingpong_server PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(pingpong_server PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET pingpong_server PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(pingpong_server PRIVATE
    shuio
)
target_link_directories(pingpong_server PRIVATE
    build/windows/x64/release
)
target_sources(pingpong_server PRIVATE
    example/pingpong/server.cpp
)

# target
add_library(shuio STATIC "")
set_target_properties(shuio PROPERTIES OUTPUT_NAME "shuio")
set_target_properties(shuio PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/release")
target_include_directories(shuio PRIVATE
    .
)
target_include_directories(shuio INTERFACE
    .
)
target_compile_options(shuio PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(shuio PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(shuio PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(shuio PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(shuio PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(shuio PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET shuio PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(shuio PRIVATE
    shuio/shu_buffer.cpp
    shuio/win32/shu_acceptor.cpp
    shuio/win32/shu_client.cpp
    shuio/win32/shu_common.cpp
    shuio/win32/shu_loop.cpp
    shuio/win32/shu_socket.cpp
    shuio/win32/shu_stream.cpp
    shuio/win32/win32_detail.cpp
)

target_compile_options(shuio PUBLIC /wd4819)